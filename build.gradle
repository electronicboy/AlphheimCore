/*
 * Copyright (c) Shane Freeder 2019
 *
 * Unauthorized copying of this file is not permitted!
 * Written by shane - 2019.2.6.
 *
 */

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.kotlin.jvm'

buildscript {
    ext.kotlin_version = '1.3.21'

    group = "pw.valaria"
    version = "1.1-SNAPSHOT"
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
    }
}



targetCompatibility = 1.8
sourceCompatibility = 1.8

group = "pw.valaria"
archivesBaseName = "alphheim-plugin"
version = "1.0-SNAPSHOT"

repositories {
    maven {
        name = "Aikar"
        url = "http://repo.aikar.co/nexus/content/groups/aikar/"
    }
    maven {
        name = "Spigot"
        url = "https://hub.spigotmc.org/nexus/content/groups/public/"
    }
    maven {
        name = "Valaria"
        url = "https://repo.valaria.pw/repository/maven-public/"
    }
    maven {
        name = "minebench-repo"
        url = "https://repo.minebench.de"
    }
    maven {
        name = "ibj"
        url = "https://nexus.ibj.io/repository/maven-public/"
    }
    //maven {
    //    name = "vault"
    //    url = "http://nexus.hc.to/content/repositories/pub_releases"
    //}
    maven {
        name = "valaria-private"
        url = "https://repo.valaria.pw/repository/valaria-private/"
        credentials {
            username valariaRepoUser
            password valariaRepoPass
        }
    }
    maven {
        name = "valaria"
        url = "https://repo.valaria.pw/repository/maven-public/"
    }
    jcenter()
    mavenLocal()
}

dependencies {
    compileOnly "pw.valaria:alphheimcraft:1.14.2-R0.1-SNAPSHOT"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.zaxxer:HikariCP:2.7.4"
    compile "co.aikar:minecraft-timings:1.0.4"
    compile "co.aikar:taskchain-bukkit:3.7.2"
    compileOnly ("net.milkbowl.vault:VaultAPI:1.6") {
        exclude group: "org.bukkit", module: "bukkit"
    }
    compileOnly "com.palmergames.bukkit:towny:0.91.4.16"
    compile "co.aikar:acf-paper:0.5.0-SNAPSHOT"
    compileOnly "me.lucko.luckperms:luckperms-api:4.1"
    compileOnly ("com.vexsoftware:nuvotifier-universal:2.5.1-SNAPSHOT") {
        exclude group: "org.bukkit", module: "bukkit"
    }
    compileOnly ("com.gmail.nossr50.mcMMO:mcMMO:1.5.04-SNAPSHOT") {
        exclude group: "org.bukkit", module: "bukkit"
        exclude group: "com.turt2live.metrics", module: "MetricsExtension"
    }
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "net.kyori:text-adapter-bukkit:3.0.1"
    //compile "de.themoep:inventorygui:1.3-snapshot"
}

compileKotlin {
    kotlinOptions {
        javaParameters = true
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs = ["-Xjsr305=strict"]

}
}

shadowJar {
    classifier = null
    configurations = [project.configurations.compile]
    relocate 'co.aikar.commands', 'pw.valaria.aperture.libs.command'
}

artifacts {
    archives jar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://repo.valaria.pw/repository/valaria-private/") {
                authentication(userName: valariaRepoUser, password: valariaRepoPass)
            }
        }
    }
}

publishing {
    publications {
    }
    repositories {
        maven {
            name = "valaria-private"
            url = "https://repo.valaria.pw/repository/valaria-private/"
            credentials {
                username = valariaRepoUser
                password = valariaRepoPass
            }

        }
    }
}

build.dependsOn shadowJar